{"version":3,"file":"bundle.js","sources":["../.yarn/cache/svelte-npm-3.22.2-8e72ae3e9f-3.zip/node_modules/svelte/internal/index.mjs","../.yarn/cache/svelte-npm-3.22.2-8e72ae3e9f-3.zip/node_modules/svelte/easing/index.mjs","../.yarn/cache/svelte-npm-3.22.2-8e72ae3e9f-3.zip/node_modules/svelte/transition/index.mjs","../src/widgets/NavigationDrawer.svelte","../src/widgets/Button.svelte","../src/widgets/Checkbox.svelte","../.yarn/cache/svelte-npm-3.22.2-8e72ae3e9f-3.zip/node_modules/svelte/store/index.mjs","../.yarn/cache/svelte-npm-3.22.2-8e72ae3e9f-3.zip/node_modules/svelte/motion/index.mjs","../src/widgets/InputStd.svelte","../src/widgets/InputOutlined.svelte","../src/widgets/Input.svelte","../src/components/ButtonGuide.svelte","../src/widgets/Dialog.svelte","../src/components/DialogGuide.svelte","../src/components/NavigationDrawerGuide.svelte","../src/widgets/Progress.svelte","../src/components/ProgressGuide.svelte","../src/widgets/Spinner.svelte","../src/components/SpinnerGuide.svelte","../src/components/InputGuide.svelte","../src/components/CheckboxGuide.svelte","../src/widgets/FileInput.svelte","../src/components/FileInputGuide.svelte","../src/widgets/TextAreaStd.svelte","../src/widgets/TextAreaOutlined.svelte","../src/widgets/TextArea.svelte","../src/components/TextAreaGuide.svelte","../src/widgets/Slider.svelte","../src/components/SliderGuide.svelte","../src/widgets/Autocomplete.svelte","../src/components/AutocompleteGuide.svelte","../src/widgets/Cascader.svelte","../src/components/CascaderGuide.svelte","../src/widgets/Toggle.svelte","../src/components/ToggleGuide.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.22.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\nimport { fly, fade } from 'svelte/transition';\n\nexport let modal = false;\nexport let visible = false;\nexport let marginTop = '';\n</script>\n{#if modal}\n  {#if visible}\n    <div\n      class=\"{`flex fixed top-0 bottom-0 z-40 left-0 right-0 ${marginTop}`}\">\n      <div class=\"w-full h-full fixed left-0 bg-black opacity-50 z-30\" transition:fade=\"{{duration:300}}\"\n           on:click={()=>visible=!visible}>\n      </div>\n      <div class=\"elevation-8 z-40\" class:`${marginTop}`={marginTop}\n           transition:fly=\"{{ x: -300, duration: 300 }}\">\n        <slot></slot>\n      </div>\n    </div>\n  {/if}\n{:else}\n  {#if visible}\n    <div transition:fly=\"{{ x: -300, duration: 300 }}\"\n         class=\"{`elevation-8 fixed top-0 bottom-0 left-0 z-40 ${marginTop}`}\">\n      <slot></slot>\n    </div>\n  {/if}\n{/if}\n","<script>\n  export let text = false;\n  export let fab = false;\n  export let outlined = false;\n  export let rounded = false;\n  export let tile = false;\n  export let block = false;\n  export let xs = false;\n  export let sm = false;\n  export let lg = false;\n  export let xl = false;\n  export let disabled = false;\n  export let textColor = \"text-black\";\n  export let outlineColor = \"border-black\";\n  export let bgColor = \"bg-transparent\";\n\n  let baseCls = \"focus:outline-none uppercase tracking-wide\";\n  let cls = \"\";\n  $: {\n    let tempCls = \"\";\n    if (outlined) {\n      tempCls =\n        baseCls +\n        ` border border-solid ${textColor} ${outlineColor} ${bgColor}`;\n    } else if (text) {\n      tempCls = baseCls + ` ${textColor} ${bgColor}`;\n    } else {\n      tempCls = baseCls + ` elevation-2 ${textColor} ${bgColor}`;\n    }\n\n    if (rounded) {\n      tempCls += \" rounded-full\";\n    }\n    if (fab) {\n      tempCls += \" rounded-full flex items-center justify-center\";\n    }\n    if (!tile) {\n      tempCls += \" rounded\";\n    }\n\n    if (block) {\n      tempCls += \" block w-full\";\n    }\n\n    if (xs) {\n      tempCls += \" h-5 text-xs px-2\";\n    } else if (sm) {\n      tempCls += \" h-6 text-sm px-3\";\n    } else if (lg) {\n      tempCls += \" h-10 text-lg px-5\";\n    } else if (xl) {\n      tempCls += \" h-12 text-xl px-6\";\n    } else {\n      tempCls += \" h-8 text-base px-4\";\n    }\n\n    cls = tempCls.trim();\n  }\n  let disabledCls;\n  $: if (disabled) {\n    disabledCls = \"opacity-25 cursor-not-allowed\";\n  } else {\n    let hover;\n    if (outlined) {\n      hover = \"hover:elevation-1\";\n    } else if (text) {\n      hover = \"hover:elevation-1\";\n    } else {\n      hover = \"hover:elevation-4\";\n    }\n    disabledCls = `${hover} active:elevation-0 ripple`;\n  }\n</script>\n\n<button class={`${cls} ${disabledCls}`} {disabled} on:click>\n  <slot />\n</button>\n","<script>\nimport { createEventDispatcher } from 'svelte';\n\nconst dispatch = createEventDispatcher();\n\nexport let label = '';\nexport let checked = false;\nexport let indeterminate = false;\nexport let color = 'text-black';\nexport let disabled = false;\n\nfunction handleChange(e) {\n  indeterminate = false;\n  dispatch('change', e.target.checked);\n}\n\nfunction handleInput(e) {\n  indeterminate = false;\n  dispatch('input', e.target.checked);\n}\n\n</script>\n\n<style>\n\n</style>\n\n<label class=\"flex items-center {color}\" class:cursor-not-allowed={disabled}\n       class:cursor-pointer={!disabled} {disabled}>\n  <input type=\"checkbox\" bind:checked {disabled} on:change={handleChange}\n         on:input={handleInput} hidden>\n  <div\n    class=\"select-none rounded-full hover:bg-gray-300 w-8 h-8 flex items-center justify-center\">\n    <span class=\"material-icons\">\n      {#if checked}\n        check_box\n      {:else if indeterminate}\n        indeterminate_check_box\n      {:else}\n        check_box_outline_blank\n      {/if}\n    </span>\n  </div>\n  {#if label}\n    <span>{label}</span>\n  {:else}\n    <slot></slot>\n  {/if}\n</label>\n\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            store.set(target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\n  import { onMount } from \"svelte\";\n  import { tweened } from \"svelte/motion\";\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let label = \"\";\n  export let value = \"\";\n  export let number = false;\n  export let borderColor = \"border-gray-700\";\n  export let labelColor = \"text-gray-700\";\n  export let helperText = \"\";\n  export let helperTextColor = \"\";\n  export let icon = \"\";\n  export let clearable = false;\n  export let disabled = false;\n  export let hideDetails = false;\n  export let readonly = false;\n  export let password = false;\n\n  let hasFocus = false;\n  let iconCls = \"\";\n  let boxWidth;\n\n  $: iconCls = icon ? \"material-icons md-18 pointer-events-none\" : \"hidden\";\n\n  const y = tweened(1, {\n    duration: 50,\n  });\n\n  let type = \"text\";\n  $: if (password) {\n    type = \"password\";\n  } else if (number) {\n    type = \"number\";\n  } else {\n    type = \"text\";\n  }\n\n  function handleInput(event) {\n    switch (type) {\n      case \"text\":\n        value = event.target.value;\n        break;\n      case \"number\":\n        value = +event.target.value;\n      default: \n        value = event.target.value;\n    }\n    dispatch(\"input\", value);\n  }\n\n  $: labelTopPadding = `transform:translateY(${$y}rem);`;\n  $: helperTextCls = `text-sm px-2 font-light h-5 ${helperTextColor}`;\n\n  let labelCls =\n    \"absolute left-0 px-2 text-sm text-gray-600 pointer-events-none\";\n  let inputPadBottom = \"\";\n\n  function setLabelColor(prefix) {\n    labelCls = `${prefix} ${labelColor}`;\n  }\n\n  let valueEmpty = false;\n  $: valueEmpty = value == null || value.toString().length === 0;\n\n  $: if (hasFocus) {\n    y.set(0.25);\n    setLabelColor(\"absolute left-0 px-2 text-sm pointer-events-none\");\n    inputPadBottom = \"padding-bottom:7px\";\n  } else {\n    inputPadBottom = \"padding-bottom:8px\";\n    labelCls = \"absolute left-0 px-2 text-sm pointer-events-none text-gray-600\";\n    if (valueEmpty) {\n      y.set(1);\n      labelCls = \"absolute left-0 px-2 pointer-events-none text-gray-600\";\n    } else {\n      y.set(0.25);\n    }\n  }\n\n  function clear() {\n    value = \"\";\n    dispatch(\"clear\");\n  }\n</script>\n\n<style>\n  .disabled {\n    @apply border-b border-dashed;\n  }\n</style>\n\n<div class=\"flex flex-col\" bind:clientWidth={boxWidth}>\n  <div\n    class:opacity-50={disabled}\n    class:disabled\n    class={hasFocus ? `relative rounded-t border-b-2 bg-gray-300 ${borderColor}` : `relative rounded-t border-b border-gray-500${disabled ? '' : ' hover:border-gray-900 hover:bg-gray-100'}`}>\n    <label\n      style={`${labelTopPadding} max-width:${boxWidth}px;`}\n      class={`${labelCls} truncate`}>\n      {label}\n    </label>\n    <div class=\"flex justify-between\">\n      <input\n        {type}\n        {readonly}\n        {value}\n        {disabled}\n        on:input={handleInput}\n        on:focus={() => (hasFocus = true)}\n        on:blur={() => (hasFocus = false)}\n        on:focus\n        on:blur\n        on:keydown\n        on:click\n        style={inputPadBottom}\n        class=\"pt-6 appearance-none bg-transparent border-none w-full\n          text-gray-800 px-2 focus:outline-none\" />\n      <div class=\"float-right flex items-center mr-2\">\n        <i\n          class={clearable && !disabled ? 'material-icons md-18 mr-2 cursor-pointer' : ''}\n          class:hidden={!clearable || disabled}\n          on:click={clear}>clear</i>\n        <i class={iconCls} class:opacity-50={disabled}>{icon}</i>\n      </div>\n    </div>\n  </div>\n  {#if !hideDetails}\n    <div class={helperTextCls}>{helperText}</div>\n  {/if}\n</div>\n","<script>\n  import { onMount } from \"svelte\";\n  import { tweened } from \"svelte/motion\";\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let label = \"\";\n  export let value = \"\";\n  export let number = false;\n  export let borderColor = \"border-gray-700\";\n  export let labelColor = \"text-gray-700\";\n  export let helperText = \"\";\n  export let helperTextColor = \"\";\n  export let icon = \"\";\n  export let clearable = false;\n  export let disabled = false;\n  export let hideDetails = false;\n  export let readonly = false;\n  export let password = false;\n\n  let hasFocus = false;\n  let iconCls = \"\";\n  let boxWidth;\n\n  const y = tweened(0.75, {\n    duration: 50,\n  });\n\n  let type = \"text\";\n  $: if (password) {\n    type = \"password\";\n  } else if (number) {\n    type = \"number\";\n  } else {\n    type = \"text\";\n  }\n\n  function handleInput(event) {\n    switch (type) {\n      case \"text\":\n        value = event.target.value;\n        break;\n      case \"number\":\n        value = +event.target.value;\n      default: \n        value = event.target.value;\n    }\n    dispatch(\"input\", value);\n  }\n\n  $: labelTranslateStyle = `transform:translateY(${$y}rem);`;\n  $: helperTextCls = `text-sm px-2 font-light h-5 ${helperTextColor}`;\n\n  let fieldsetCls = \"border border-gray-500\";\n  let labelCls = \"text-gray-600 \";\n\n  let legendStyle = \"\";\n  let labelWidth;\n\n  $: iconCls = icon ? \"material-icons md-18 pointer-events-none\" : \"hidden\";\n\n  function setFocusState() {\n    labelCls = `text-sm ${labelColor} `;\n    y.set(-1.35);\n    fieldsetCls = `border-2 ${borderColor} `;\n  }\n\n  function setFieldsetCls(cls) {\n    fieldsetCls = cls + \" \";\n  }\n\n  function setLabelCls(cls) {\n    labelCls = cls + \" \";\n  }\n\n  function setLegendStyle(style) {\n    legendStyle = style;\n  }\n\n  $: if (labelWidth) {\n    if (!hasFocus && (value == null || value.toString().length === 0)) {\n      setLegendStyle(\"\");\n    } else {\n      setLegendStyle(`width:${labelWidth + 4}px;margin-left:6px;`);\n    }\n  }\n\n  $: if (hasFocus) {\n    setFocusState();\n  } else {\n    if (!disabled) {\n      setFieldsetCls(\"border border-gray-500 hover:border-gray-900\");\n    } else {\n      setFieldsetCls(\"border\");\n    }\n    if (value == null || value.toString().length === 0) {\n      setLabelCls(\"text-gray-600\");\n      y.set(-0.15);\n    } else {\n      setLabelCls(\"text-sm text-gray-600\");\n      y.set(-1.35);\n    }\n  }\n\n  function clear() {\n    value = \"\";\n    dispatch(\"clear\");\n  }\n</script>\n\n<div class=\"flex flex-col\" bind:clientWidth={boxWidth}>\n  <fieldset\n    {disabled}\n    style=\"height:59px;\"\n    class={`${fieldsetCls}relative rounded`}\n    class:opacity-50={disabled}>\n    <legend style={legendStyle}>&#8203</legend>\n    <!-- svelte-ignore a11y-label-has-associated-control -->\n    <label\n      bind:clientWidth={labelWidth}\n      style={`${labelTranslateStyle} max-width:${boxWidth - 16}px;`}\n      class={`${labelCls}absolute left-0 mx-2 pointer-events-none truncate`}>\n      {label}\n    </label>\n    <div class=\"flex justify-between\">\n      <input\n        {type}\n        {readonly}\n        {value}\n        {disabled}\n        on:input={handleInput}\n        on:focus={() => (hasFocus = true)}\n        on:blur={() => (hasFocus = false)}\n        on:focus\n        on:blur\n        on:keydown\n        on:click\n        style=\"padding-bottom: 3px;\"\n        class=\"h-8 appearance-none bg-transparent border-none w-full\n          text-gray-800 px-2 focus:outline-none\" />\n      <div class=\"float-right flex items-center mr-2\">\n        <i\n          class={clearable && !disabled ? 'material-icons md-18 mr-2 cursor-pointer' : ''}\n          class:hidden={!clearable || disabled}\n          on:click={clear}>clear</i>\n        <i class={iconCls} class:opacity-50={disabled}>{icon}</i>\n      </div>\n    </div>\n  </fieldset>\n  {#if !hideDetails}\n    <div class={helperTextCls}>{helperText}</div>\n  {/if}\n</div>\n","<script>\nimport InputStd from './InputStd.svelte';\nimport InputOutlined from './InputOutlined.svelte';\n\nexport let label = '';\nexport let value = '';\nexport let number = false;\nexport let borderColor = 'border-gray-700';\nexport let labelColor = 'text-gray-700';\nexport let helperText = '';\nexport let helperTextColor = '';\nexport let outlined = false;\nexport let icon = '';\nexport let clearable = false;\nexport let disabled = false;\nexport let hideDetails = false;\nexport let readonly = false;\nexport let password = false;\n\n</script>\n{#if !outlined}\n  <InputStd {label} bind:value={value} {borderColor} {labelColor} {helperText} {icon}\n            {number} {clearable} {disabled} {hideDetails} {readonly} {password}\n            on:focus\n            on:blur\n            on:keydown\n            on:clear\n            on:click\n            {helperTextColor} on:input/>\n{:else}\n  <InputOutlined {label} bind:value={value} {borderColor} {labelColor} {helperText} {icon}\n                 {number} {clearable} {disabled} {hideDetails} {readonly} {password}\n                 on:focus\n                 on:blur\n                 on:keydown\n                 on:clear\n                 on:click\n                 {helperTextColor} on:input/>\n{/if}\n\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n\n  let text = false;\n  let fab = false;\n  let outlined = false;\n  let rounded = false;\n  let tile = false;\n  let block = false;\n  let xs = false;\n  let sm = false;\n  let lg = false;\n  let xl = false;\n  let disabled = false;\n  let textColor = \"text-white\";\n  let outlineColor = \"border-black\";\n  let bgColor = \"bg-red-700\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Button</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">text</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Removes the elevation.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">fab</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Floating Action Button.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">outlined</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Removes the elevation and applies a thin border\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">rounded</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Applies a large border radius on the button.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">tile</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Removes the component's border-radius.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">block</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Expands the button to 100% of available space.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">xs</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Extra small button\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">sm</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Small button\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">lg</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Large button\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">xl</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Extra large button\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Removes the ability to click or target the component.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">textColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Applies Tailwindcss text color to the button. Accepts only valid Tailwindcss\n      text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">text-black</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      outlineColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Applies Tailwindcss border color to the button. Accepts only valid\n      Tailwindcss border color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      border-black\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3\">bgColor</div>\n    <div class=\"table-cell py-3 px-3\">\n      Applies Tailwindcss background color to the button. Accepts only valid\n      Tailwindcss background color class\n    </div>\n    <div class=\"table-cell py-3 px-3\">string</div>\n    <div class=\"table-cell py-3 px-3\">bg-transparent</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n\n  <div class=\"flex flex-col\">\n    <div class=\"flex items-center mb-4\">\n      <Button\n        {text}\n        {fab}\n        {outlined}\n        {rounded}\n        {tile}\n        {block}\n        {xs}\n        {sm}\n        {lg}\n        {xl}\n        {disabled}\n        {textColor}\n        {outlineColor}\n        {bgColor}\n        on:click={() => alert(\"Hello World!\")}>\n        Demo Button\n      </Button>\n    </div>\n    <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n      <div class=\"flex flex-row flex-wrap mb-3\">\n        <div class=\"px-4\">\n          <Checkbox bind:checked={text}>text</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={fab}>fab</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={outlined}>outlined</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={rounded}>rounded</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={tile}>tile</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={block}>block</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={xs}>xs</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={sm}>sm</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={lg}>lg</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={xl}>xl</Checkbox>\n        </div>\n        <div class=\"px-4\">\n          <Checkbox bind:checked={disabled}>disabled</Checkbox>\n        </div>\n      </div>\n      <div\n        class=\"w-full flex flex-row flex-wrap\">\n        <div class=\"px-4\">\n          <Input hideDetails outlined label=\"textColor\" bind:value={textColor} />\n        </div>\n        <div class=\"px-4\">\n          <Input hideDetails outlined label=\"outlineColor\" bind:value={outlineColor} />\n        </div>\n        <div class=\"px-4\">\n          <Input hideDetails outlined label=\"bgColor\" bind:value={bgColor} />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<Button\n  {text}\n  {fab}\n  {outlined}\n  {rounded}\n  {tile}\n  {block}\n  {xs}\n  {sm}\n  {lg}\n  {xl}\n  {disabled}\n  {textColor}\n  {outlineColor}\n  {bgColor}\n  on:click={() => alert(\"Hello World!\")}>\n  Demo Button\n</Button>`}\n  </pre>\n","<script>\nimport { fade, scale } from 'svelte/transition';\n\nexport let visible = false;\nexport let permanent = false;\n</script>\n\n{#if visible}\n  <div class=\"fixed top-0 bottom-0 left-0 right-0 flex justify-center items-center z-40\">\n    <div class=\"absolute h-full w-full bg-black opacity-50\"\n         transition:fade=\"{{duration:100}}\"\n         on:click=\"{()=> {if(!permanent) visible=false}}\">\n    </div>\n    <div class=\"z-40\" transition:scale=\"{{duration:200}}\">\n      <slot></slot>\n    </div>\n  </div>\n{/if}\n","<script>\n  import Dialog from \"../widgets/Dialog.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Button from \"../widgets/Button.svelte\";\n\n  let visible = false;\n  let permanent = false;\n\n  let textColor = \"text-white\";\n  let bgColor = \"bg-blue-600\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Dialog</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">visible</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Shows or hides the dialog.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">permanent</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      When 'permanent' is true, dialog is not dismissable by clicking away.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n\n  <Dialog bind:visible bind:permanent>\n    <div class=\"bg-white p-4 rounded\">\n      <div class=\"font-semibold text-lg p-3\">My Dialog</div>\n      <div class=\"p-3\">\n        <Button\n          outlineColor=\"border-green-700\"\n          textColor=\"text-green-700\"\n          outlined\n          on:click={() => (visible = false)}>\n          Close\n        </Button>\n      </div>\n    </div>\n  </Dialog>\n\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox bind:checked={visible}>visible</Checkbox>\n      </div>\n      <div class=\"px-4\">\n        <Checkbox bind:checked={permanent}>permanent</Checkbox>\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<div class=\"bg-gray-200 rounded p-4 w-full\">\n    <h3 class=\"text-lg font-bold ml-2 flex justify-between\">\n        Demo\n        <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n    </h3>\n\n    <Dialog bind:visible bind:permanent>\n        <div class=\"bg-white p-4 rounded\">\n        <div class=\"font-semibold text-lg p-3\">My Dialog</div>\n        <div class=\"p-3\">\n            <Button\n            outlineColor=\"border-green-700\"\n            textColor=\"text-green-700\"\n            outlined\n            on:click={() => (visible = false)}>\n            Close\n            </Button>\n        </div>\n        </div>\n    </Dialog>\n\n    <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n        <div class=\"flex flex-row flex-wrap\">\n        <div class=\"px-4\">\n            <Checkbox bind:checked={visible}>visible</Checkbox>\n        </div>\n        <div class=\"px-4\">\n            <Checkbox bind:checked={permanent}>permanent</Checkbox>\n        </div>\n        </div>\n    </div>\n</div>`}\n</pre>\n","<script>\n  import NavigationDrawer from \"../widgets/NavigationDrawer.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Button from \"../widgets/Button.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n\n  let visible = false;\n  let modal = false;\n  let marginTop = \"mt-0\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Navigation Drawer</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">visible</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Shows or hides the navigation drawer.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">modal</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      When 'modal' is true, navigation drawer can be dismissed by clicking away.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">marginTop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Applies Tailwindcss margin top class to the Navigation Drawer. Accepts\n      only valid Tailwindcss margin top class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <NavigationDrawer bind:visible {modal} {marginTop}>\n    <div class=\"h-full w-64 bg-yellow-800 text-white\">My drawer</div>\n  </NavigationDrawer>\n\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox bind:checked={visible}>visible</Checkbox>\n      </div>\n      <div class=\"px-4\">\n        <Checkbox bind:checked={modal}>modal</Checkbox>\n      </div>\n    </div>\n\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Input hideDetails outlined label=\"marginTop\" bind:value={marginTop} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<NavigationDrawer bind:visible {modal} {marginTop}>\n  <div class=\"h-full w-64 bg-yellow-800 text-white\">My drawer</div>\n</NavigationDrawer>`}\n</pre>\n","<script>\nimport { tweened } from 'svelte/motion';\nimport { cubicOut } from 'svelte/easing';\n\nconst progress = tweened(0, {\n  duration: 200,\n  easing: cubicOut,\n});\n\nexport let trackColor = 'bg-red-200';\nexport let fillColor = 'bg-blue-500';\nexport let height = 'h-1';\n</script>\n\n<style>\n  .mdc-slider__track-container {\n    overflow: hidden;\n  }\n\n  .mdc-slider__track {\n    -webkit-transform-origin: left top;\n    -ms-transform-origin: left top;\n    transform-origin: left top;\n    will-change: transform;\n  }\n\n  .mdc-slider__track.move {\n    animation: increase 2s infinite;\n  }\n\n  @keyframes increase {\n    from {\n      transform: translateX(-100%);\n    }\n    to {\n      transform: translateX(200%);\n    }\n  }\n</style>\n\n<div\n  class=\"relative w-full {height} block outline-none flex items-center\">\n  <div class=\"absolute w-full mdc-slider__track-container {trackColor} {height}\">\n    <div\n      class=\"h-full w-1/2 absolute mdc-slider__track {fillColor} move\"/>\n  </div>\n</div>\n","<script>\n  import Progress from \"../widgets/Progress.svelte\";\n  import Button from \"../widgets/Button.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n\n  let trackColor = \"bg-red-200\";\n  let fillColor = \"bg-blue-500\";\n  let height = \"h-1\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Progress</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">trackColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The background color of the progress bar. Accepts valid Tailwindcss\n      background color class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">bg-red-200</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">fillColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the moving part of the progress bar. Accepts valid\n      Tailwindcss background color class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">bg-blue-500</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">height</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The height of the progress bar. Accepts valid Tailwindcss height class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">h-1</div>\n  </div>\n</div>\n\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n    <h3 class=\"mx-2 mb-2 flex justify-between\">\n      <div class=\"text-lg font-bold\">Demo</div>\n      <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n    </h3>\n    <Progress {trackColor} {fillColor} {height}>\n    </Progress>\n  \n    <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n      <div class=\"w-full flex flex-row flex-wrap\">\n        <div class=\"px-4\">\n          <Input hideDetails outlined label=\"trackColor\" bind:value={trackColor} />\n        </div>\n        <div class=\"px-4\">\n          <Input hideDetails outlined label=\"fillColor\" bind:value={fillColor} />\n        </div>\n        <div class=\"px-4\">\n          <Input hideDetails outlined label=\"height\" bind:value={height} />\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <pre\n    class:hidden={!showCode}\n    class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n  {`<Progress {trackColor} {fillColor} {height}>\n</Progress>`}\n  </pre>\n  ","<script>\n  export let color = \"text-purple-500\";\n  export let width = \"w-8\";\n  export let height = \"h-8\";\n</script>\n\n<style>\n  .spinner {\n    -webkit-animation: rotate 2s linear infinite;\n    animation: rotate 2s linear infinite;\n  }\n\n  .spinner .path {\n    stroke-linecap: round;\n    -webkit-animation: dash 1.5s ease-in-out infinite;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n\n  @-webkit-keyframes rotate {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes rotate {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n</style>\n\n<svg\n  class=\"spinner stroke-current {color} {width} {height}\"\n  viewBox=\"0 0 50 50\">\n  <circle class=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke-width=\"5\" />\n</svg>\n","<script>\n  import Spinner from \"../widgets/Spinner.svelte\";\n  import Button from \"../widgets/Button.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n\n  let color = \"text-purple-500\";\n  let width = \"w-8\";\n  let height = \"h-8\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Spinner</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">color</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the spinner. Accepts valid Tailwindcss text color class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-purple-500\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">width</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The width of the spinner. Accepts valid Tailwindcss width class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">w-8</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">height</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The height of the spinner. Accepts valid Tailwindcss height class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">h-8</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <Spinner {color} {width} {height} />\n\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Input hideDetails outlined label=\"color\" bind:value={color} />\n      </div>\n      <div class=\"px-4\">\n        <Input hideDetails outlined label=\"width\" bind:value={width} />\n      </div>\n      <div class=\"px-4\">\n        <Input hideDetails outlined label=\"height\" bind:value={height} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n    {`<Spinner {color} {width} {height} />`}\n</pre>\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n\n  let label = \"Enter Your Name\";\n  let value = \"Peter Piper\";\n  let number = false;\n  let borderColor = \"border-gray-700\";\n  let labelColor = \"text-gray-700\";\n  let helperText = \"\";\n  let helperTextColor = \"text-red-600\";\n  let outlined = false;\n  let icon = \"spellcheck\";\n  let clearable = false;\n  let disabled = false;\n  let hideDetails = false;\n  let readonly = false;\n  let password = false;\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Input</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The label text of the input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The value of the input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Specifies whether it's a number type input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">borderColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The border color of the input box. Accepts valid Tailwindcss border color\n      class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      border-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">labelColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the label text. Accepts valid Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">helperText</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The helper text underneath the input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      helperTextColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the helper text underneath the input box. Accepts Tailwindcss\n      text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">outlined</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Transformed this into a outlined input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">icon</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The icon to display on the right of the input box. <br /> Accepts a material\n      icon from this list <a\n        class=\"text-blue-600\"\n        href=\"https://material.io/resources/icons/?style=baseline\">https://material.io/resources/icons/?style=baseline</a>\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">clearable</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Includes a clear button when 'clearable' is true\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Disables input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">hideDetails</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Hides helper text.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">readonly</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Makes input box readonly\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">password</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Mask input\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"my-2\">\n    <Input\n      {label}\n      bind:value\n      {password}\n      {number}\n      {borderColor}\n      {labelColor}\n      {helperText}\n      {helperTextColor}\n      {outlined}\n      {icon}\n      {clearable}\n      {disabled}\n      {hideDetails}\n      {readonly} />\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"number\" bind:checked={number} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"outlined\" bind:checked={outlined} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"clearable\" bind:checked={clearable} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"hideDetails\" bind:checked={hideDetails} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"readonly\" bind:checked={readonly} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"password\" bind:checked={password} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"label\" bind:value={label} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"value\" bind:value />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"icon\" bind:value={icon} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"borderColor\"\n          bind:value={borderColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"labelColor\"\n          bind:value={labelColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperText\"\n          bind:value={helperText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperTextColor\"\n          bind:value={helperTextColor} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<Input\n    {label}\n    bind:value\n    {number}\n    {borderColor}\n    {labelColor}\n    {helperText}\n    {helperTextColor}\n    {outlined}\n    {icon}\n    {clearable}\n    {disabled}\n    {hideDetails}\n    {readonly} />`}\n</pre>\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n\n  let label1 = \"Checkbox with label\";\n  let checked1 = false;\n  let indeterminate1 = false;\n  let color1 = \"text-green-500\";\n  let disabled1 = false;\n\n  let checked2 = false;\n  let indeterminate2 = false;\n  let color2 = \"text-red-700\";\n  let disabled2 = false;\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Checkbox</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The label text of the checkbox.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">checked</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The checked status of the checkbox.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      indeterminate\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Whether the checked status is indeterminate.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">color</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the checkbox and its label. Accepts Tailwindcss text color\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">text-black</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Whether the checkbox is disabled.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"mt-2 mb-1\">\n    <Checkbox\n      label={label1}\n      bind:checked={checked1}\n      bind:indeterminate={indeterminate1}\n      color={color1}\n      disabled={disabled1} />\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"checked\" bind:checked={checked1} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"indeterminate\" bind:checked={indeterminate1} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled1} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"label\" bind:value={label1} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"color\" bind:value={color1} />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mb-1 mt-6\">\n    <Checkbox\n      bind:checked={checked2}\n      bind:indeterminate={indeterminate2}\n      color={color2}\n      disabled={disabled2}>\n      <i class=\"material-icons text-blue-700\">facebook</i>\n      <span class=\"text-orange-500\">Checkbox with slot</span>\n    </Checkbox>\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"checked\" bind:checked={checked2} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"indeterminate\" bind:checked={indeterminate2} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled2} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"color\" bind:value={color2} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<Checkbox\n  label={label1}\n  bind:checked={checked1}\n  bind:indeterminate={indeterminate1}\n  color={color1}\n  disabled={disabled1} />\n    \n<Checkbox\n  bind:checked={checked2}\n  bind:indeterminate={indeterminate2}\n  color={color2}\n  disabled={disabled2}>\n  <i class=\"material-icons text-blue-700\">facebook</i>\n  <span class=\"text-orange-500\">Checkbox with slot</span>\n</Checkbox>`}\n</pre>\n","<script>\nimport { createEventDispatcher } from 'svelte';\nimport Input from './Input.svelte';\n\nconst dispatch = createEventDispatcher();\n\nexport let label = '';\nexport let accept = '';\nexport let clearable = false;\nexport let disabled = false;\n\nexport let borderColor = 'border-gray-700';\nexport let labelColor = 'text-gray-700';\nexport let helperText = '';\nexport let helperTextColor = '';\nexport let outlined = false;\nexport let icon = '';\nexport let hideDetails = false;\nexport let multiple = false;\nexport let value = null;\n\nlet text = '';\nlet fileInput;\n\nfunction selectFile() {\n  fileInput.value = '';\n  fileInput.click();\n}\n\n$: if (!value) {\n  text = '';\n}\n\nfunction fileSelected(e) {\n  value = e.target.files;\n  dispatch(e.type, e.target.files);\n  text = '';\n  const texts = [];\n\n  for (let i = 0; i < e.target.files.length; i++) {\n    texts.push(e.target.files[i].name);\n  }\n  text = texts.join(', ');\n}\n</script>\n\n<Input {outlined} icon=\"{icon}\" {clearable} {disabled} {hideDetails} readonly\n       {label} {labelColor} {borderColor} {helperText} {helperTextColor}\n       bind:value={text}\n       on:focus\n       on:blur\n       on:keydown\n       on:clear\n       on:click={selectFile}\n/>\n<input type=\"file\" {accept} {multiple} bind:this={fileInput} class=\"hidden\"\n       on:change={fileSelected}>\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import FileInput from \"../widgets/FileInput.svelte\";\n\n  let label = \"Select a file\";\n  let accept = \".docx,.txt,.js,.json,.readme\";\n  let clearable = false;\n  let disabled = false;\n\n  let borderColor = \"border-gray-700\";\n  let labelColor = \"text-gray-700\";\n  let helperText = \"Click the input box to select a file\";\n  let helperTextColor = \"text-red-600\";\n  let outlined = false;\n  let icon = \"description\";\n  let hideDetails = false;\n  let multiple = false;\n  let value = null;\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">File Input</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The label text of the input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">accept</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Specify what file types the user can pick from the file input dialog box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">multiple</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Whether multiple files can be selected\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The FileList selected by the user\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">borderColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The border color of the input box. Accepts valid Tailwindcss border color\n      class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      border-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">labelColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the label text. Accepts valid Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">helperText</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The helper text underneath the input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      helperTextColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the helper text underneath the input box. Accepts Tailwindcss\n      text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">outlined</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Transformed this into a outlined input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">icon</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The icon to display on the right of the input box. <br /> Accepts a material\n      icon from this list <a\n        class=\"text-blue-600\"\n        href=\"https://material.io/resources/icons/?style=baseline\">https://material.io/resources/icons/?style=baseline</a>\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">clearable</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Includes a clear button when 'clearable' is true\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Disables input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">hideDetails</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Hides helper text.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"my-2\">\n    <FileInput\n      {label}\n      {accept}\n      {multiple}\n      bind:value\n      {borderColor}\n      {labelColor}\n      {helperText}\n      {helperTextColor}\n      {outlined}\n      {icon}\n      {clearable}\n      {disabled}\n      {hideDetails} />\n  </div>\n\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"multiple\" bind:checked={multiple} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"outlined\" bind:checked={outlined} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"clearable\" bind:checked={clearable} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"hideDetails\" bind:checked={hideDetails} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"label\" bind:value={label} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"accept\" bind:value={accept} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"value\" bind:value />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"icon\" bind:value={icon} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"borderColor\"\n          bind:value={borderColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"labelColor\"\n          bind:value={labelColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperText\"\n          bind:value={helperText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperTextColor\"\n          bind:value={helperTextColor} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<FileInput\n  {label}\n  {accept}\n  {multiple}\n  bind:value\n  {borderColor}\n  {labelColor}\n  {helperText}\n  {helperTextColor}\n  {outlined}\n  {icon}\n  {clearable}\n  {disabled}\n  {hideDetails} />`}\n</pre>\n","<script>\r\nimport { onMount } from 'svelte';\r\nimport { tweened } from 'svelte/motion';\r\nimport { createEventDispatcher } from 'svelte';\r\n\r\nconst dispatch = createEventDispatcher();\r\n\r\nexport let label = '';\r\nexport let value = '';\r\nexport let number = false;\r\nexport let borderColor = 'border-gray-700';\r\nexport let labelColor = 'text-gray-700';\r\nexport let helperText = '';\r\nexport let helperTextColor = '';\r\nexport let icon = '';\r\nexport let clearable = false;\r\nexport let disabled = false;\r\nexport let hideDetails = false;\r\nexport let readonly = false;\r\nexport let height;\r\n\r\nlet hasFocus = false;\r\nlet iconCls = '';\r\nlet boxWidth;\r\n\r\nonMount(() => {\r\n  iconCls = icon ? 'material-icons md-18 pointer-events-none' : 'hidden';\r\n});\r\n\r\nconst y = tweened(1, {\r\n  duration: 50,\r\n});\r\n\r\nlet type = 'text';\r\n$: if (number) type = 'number';\r\n\r\nfunction handleInput(event) {\r\n  switch (type) {\r\n    case 'text':\r\n      value = event.target.value;\r\n      break;\r\n    case 'number':\r\n      value = +event.target.value;\r\n  }\r\n  dispatch('input', value);\r\n}\r\n\r\n$: labelTopPadding = `transform:translateY(${$y}rem);`;\r\n$: helperTextCls = `text-sm px-2 font-light h-5 ${helperTextColor}`;\r\n\r\nlet labelCls = 'absolute left-0 px-2 text-sm text-gray-600 pointer-events-none';\r\nlet inputPadBottom = '';\r\n\r\nfunction setLabelColor(prefix) {\r\n  labelCls = `${prefix} ${labelColor}`;\r\n}\r\n\r\nlet valueEmpty = false;\r\n$: valueEmpty = value == null || value.toString().length === 0;\r\n\r\n$: if (hasFocus) {\r\n  y.set(0.25);\r\n  setLabelColor('absolute left-0 px-2 text-sm pointer-events-none');\r\n  inputPadBottom = 'padding-bottom:7px';\r\n} else {\r\n  inputPadBottom = 'padding-bottom:8px';\r\n  labelCls = 'absolute left-0 px-2 text-sm pointer-events-none text-gray-600';\r\n  if (valueEmpty) {\r\n    y.set(1);\r\n    labelCls = 'absolute left-0 px-2 pointer-events-none text-gray-600';\r\n  } else {\r\n    y.set(0.25);\r\n  }\r\n}\r\n\r\nfunction clear() {\r\n  value = '';\r\n  dispatch('clear');\r\n}\r\n</script>\r\n<style>\r\n  .disabled {\r\n    @apply border-b border-dashed;\r\n  }\r\n</style>\r\n\r\n<div class=\"flex flex-col\" bind:clientWidth={boxWidth}>\r\n  <div\r\n    class:opacity-50={disabled}\r\n    class:disabled\r\n    class=\"{hasFocus?\r\n  `relative rounded-t border-b-2 bg-gray-300 ${borderColor}`:\r\n  `relative rounded-t border-b border-gray-500${disabled?\r\n  '':' hover:border-gray-900 hover:bg-gray-100'}`}\">\r\n    <label\r\n      style={`${labelTopPadding} max-width:${boxWidth}px;`}\r\n      class={`${labelCls} truncate`}>\r\n      {label}\r\n    </label>\r\n    <div class=\"flex justify-between\">\r\n      <textarea {type} {readonly}\r\n             {value} {disabled}\r\n             on:input={handleInput}\r\n             on:focus=\"{() => hasFocus=true}\"\r\n             on:blur=\"{() => hasFocus=false}\"\r\n             on:focus\r\n             on:blur\r\n             on:keydown\r\n             on:click\r\n             style=\"{inputPadBottom}\"\r\n             class=\"{`mt-6 appearance-none bg-transparent border-none w-full\r\n         text-gray-800 px-2 focus:outline-none ${height}`}\"/>\r\n      <div class=\"float-right flex items-center mr-2\">\r\n        <i class=\"{clearable&&!disabled?'material-icons md-18 mr-2 cursor-pointer':''}\"\r\n           class:hidden={!clearable || disabled}\r\n           on:click={clear}>clear</i>\r\n        <i class=\"{iconCls}\" class:opacity-50={disabled}>{icon}</i>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  {#if !hideDetails}\r\n    <div class={helperTextCls}>{helperText}</div>\r\n  {/if}\r\n</div>\r\n","<script>\r\nimport { onMount } from 'svelte';\r\nimport { tweened } from 'svelte/motion';\r\nimport { createEventDispatcher } from 'svelte';\r\n\r\nconst dispatch = createEventDispatcher();\r\n\r\nexport let label = '';\r\nexport let value = '';\r\nexport let number = false;\r\nexport let borderColor = 'border-gray-700';\r\nexport let labelColor = 'text-gray-700';\r\nexport let helperText = '';\r\nexport let helperTextColor = '';\r\nexport let icon = '';\r\nexport let clearable = false;\r\nexport let disabled = false;\r\nexport let hideDetails = false;\r\nexport let readonly = false;\r\nexport let height;\r\n\r\nlet hasFocus = false;\r\nlet iconCls = '';\r\nlet boxWidth;\r\n\r\nconst y = tweened(0.75, {\r\n  duration: 50,\r\n});\r\n\r\nlet type = 'text';\r\n$: if (number) type = 'number';\r\n\r\nfunction handleInput(event) {\r\n  switch (type) {\r\n    case 'text':\r\n      value = event.target.value;\r\n      break;\r\n    case 'number':\r\n      value = +event.target.value;\r\n  }\r\n  dispatch('input', value);\r\n}\r\n\r\n$: labelTranslateStyle = `transform:translateY(${$y}rem);`;\r\n$: helperTextCls = `text-sm px-2 font-light h-5 ${helperTextColor}`;\r\n\r\nlet fieldsetCls = 'border border-gray-500';\r\nlet labelCls = 'text-gray-600 ';\r\n\r\nlet legendStyle = '';\r\nlet labelWidth;\r\nonMount(() => {\r\n  iconCls = icon ? 'material-icons md-18 pointer-events-none' : 'hidden';\r\n});\r\n\r\nfunction setFocusState() {\r\n  labelCls = `text-sm ${labelColor} `;\r\n  y.set(-1.35);\r\n  fieldsetCls = `border-2 ${borderColor} `;\r\n}\r\n\r\nfunction setFieldsetCls(cls) {\r\n  fieldsetCls = cls + ' ';\r\n}\r\n\r\nfunction setLabelCls(cls) {\r\n  labelCls = cls + ' ';\r\n}\r\n\r\nfunction setLegendStyle(style) {\r\n  legendStyle = style;\r\n}\r\n\r\n$: if (labelWidth) {\r\n  if (!hasFocus && (value == null || value.toString().length === 0)) {\r\n    setLegendStyle('');\r\n  } else {\r\n    setLegendStyle(`width:${labelWidth + 4}px;margin-left:6px;`);\r\n  }\r\n}\r\n\r\n\r\n$: if (hasFocus) {\r\n  setFocusState();\r\n} else {\r\n  if (!disabled) {\r\n    setFieldsetCls('border border-gray-500 hover:border-gray-900');\r\n  } else {\r\n    setFieldsetCls('border');\r\n  }\r\n  if (value == null || value.toString().length === 0) {\r\n    setLabelCls('text-gray-600');\r\n    y.set(-0.15);\r\n  } else {\r\n    setLabelCls('text-sm text-gray-600');\r\n    y.set(-1.35);\r\n  }\r\n}\r\n\r\nfunction clear() {\r\n  value = '';\r\n  dispatch('clear');\r\n}\r\n</script>\r\n<div class=\"flex flex-col\" bind:clientWidth={boxWidth}>\r\n  <fieldset {disabled}\r\n            class=\"{`${fieldsetCls}relative rounded`}\" class:opacity-50={disabled}>\r\n    <legend style=\"{legendStyle}\">&#8203</legend>\r\n    <label\r\n      bind:clientWidth={labelWidth}\r\n      style={`${labelTranslateStyle} max-width:${boxWidth-16}px;`}\r\n      class={`${labelCls}absolute left-0 mx-2 pointer-events-none truncate`}>\r\n      {label}\r\n    </label>\r\n    <div class=\"flex justify-between\">\r\n      <textarea {type} {readonly}\r\n             {value} {disabled}\r\n             on:input={handleInput}\r\n             on:focus=\"{() => hasFocus=true}\"\r\n             on:blur=\"{() => hasFocus=false}\"\r\n             on:focus\r\n             on:blur\r\n             on:keydown\r\n             on:click\r\n             style=\"padding-bottom: 3px;\"\r\n             class=\"{`appearance-none bg-transparent border-none w-full\r\n         text-gray-800 px-2 focus:outline-none ${height}`}\"/>\r\n      <div class=\"float-right flex items-center mr-2\">\r\n        <i class=\"{clearable&&!disabled?'material-icons md-18 mr-2 cursor-pointer':''}\"\r\n           class:hidden={!clearable || disabled}\r\n           on:click={clear}>clear</i>\r\n        <i class=\"{iconCls}\" class:opacity-50={disabled}>{icon}</i>\r\n      </div>\r\n    </div>\r\n  </fieldset>\r\n  {#if !hideDetails}\r\n    <div class={helperTextCls}>{helperText}</div>\r\n  {/if}\r\n</div>\r\n","<script>\r\n  import TextAreaStd from \"./TextAreaStd.svelte\";\r\n  import TextAreaOutlined from \"./TextAreaOutlined.svelte\";\r\n\r\n  export let label = \"\";\r\n  export let value = \"\";\r\n  export let number = false;\r\n  export let borderColor = \"border-gray-700\";\r\n  export let labelColor = \"text-gray-700\";\r\n  export let helperText = \"\";\r\n  export let helperTextColor = \"\";\r\n  export let outlined = false;\r\n  export let icon = \"\";\r\n  export let clearable = false;\r\n  export let disabled = false;\r\n  export let hideDetails = false;\r\n  export let readonly = false;\r\n  export let height = \"h-20\";\r\n</script>\r\n\r\n{#if !outlined}\r\n  <TextAreaStd\r\n    {height}\r\n    {label}\r\n    bind:value\r\n    {borderColor}\r\n    {labelColor}\r\n    {helperText}\r\n    {icon}\r\n    {number}\r\n    {clearable}\r\n    {disabled}\r\n    {hideDetails}\r\n    {readonly}\r\n    on:focus\r\n    on:blur\r\n    on:keydown\r\n    on:clear\r\n    on:click\r\n    {helperTextColor}\r\n    on:input />\r\n{:else}\r\n  <TextAreaOutlined\r\n    {height}\r\n    {label}\r\n    bind:value\r\n    {borderColor}\r\n    {labelColor}\r\n    {helperText}\r\n    {icon}\r\n    {number}\r\n    {clearable}\r\n    {disabled}\r\n    {hideDetails}\r\n    {readonly}\r\n    on:focus\r\n    on:blur\r\n    on:keydown\r\n    on:clear\r\n    on:click\r\n    {helperTextColor}\r\n    on:input />\r\n{/if}\r\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import TextArea from \"../widgets/TextArea.svelte\";\n\n  let label = \"Enter Your Name\";\n  let value = \"Peter Piper\";\n  let number = false;\n  let borderColor = \"border-gray-700\";\n  let labelColor = \"text-gray-700\";\n  let helperText = \"\";\n  let helperTextColor = \"text-red-600\";\n  let outlined = false;\n  let icon = \"spellcheck\";\n  let clearable = false;\n  let disabled = false;\n  let hideDetails = false;\n  let readonly = false;\n  let height = \"h-20\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Text Area</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The label text of the text area.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The value of the text area.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Specifies whether it's a number type text area.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">borderColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The border color of the text area. Accepts valid Tailwindcss border color\n      class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      border-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">labelColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the label text. Accepts valid Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">helperText</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The helper text underneath the text area.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      helperTextColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the helper text underneath the text area. Accepts Tailwindcss\n      text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">outlined</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Transformed this into a outlined text area.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">icon</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The icon to display on the right of the text area. <br /> Accepts a material\n      icon from this list <a\n        class=\"text-blue-600\"\n        href=\"https://material.io/resources/icons/?style=baseline\">https://material.io/resources/icons/?style=baseline</a>\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">clearable</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Includes a clear button when 'clearable' is true\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Disables text area.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">hideDetails</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Hides helper text.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">readonly</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Makes text area readonly\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">height</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Height of the text area. Accepts Tailwindcss height class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">h-20</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"my-2\">\n    <TextArea\n      {label}\n      bind:value\n      {number}\n      {borderColor}\n      {labelColor}\n      {helperText}\n      {helperTextColor}\n      {outlined}\n      {icon}\n      {clearable}\n      {disabled}\n      {hideDetails}\n      {readonly}\n      {height} />\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"number\" bind:checked={number} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"outlined\" bind:checked={outlined} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"clearable\" bind:checked={clearable} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"hideDetails\" bind:checked={hideDetails} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"readonly\" bind:checked={readonly} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"label\" bind:value={label} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"value\" bind:value />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"icon\" bind:value={icon} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"borderColor\"\n          bind:value={borderColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"labelColor\"\n          bind:value={labelColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperText\"\n          bind:value={helperText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperTextColor\"\n          bind:value={helperTextColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"height\" bind:value={height} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n  {`<TextArea\n  {label}\n  bind:value\n  {number}\n  {borderColor}\n  {labelColor}\n  {helperText}\n  {helperTextColor}\n  {outlined}\n  {icon}\n  {clearable}\n  {disabled}\n  {hideDetails}\n  {readonly}\n  {height} />`}\n  </pre>\n","<script>\nexport let value;\nexport let min = 0;\nexport let max = 1;\nexport let step = undefined;\nexport let thumbColor = 'text-blue-500';\nexport let trackEmptyColor = 'bg-blue-200';\nexport let trackFilledColor = 'bg-blue-500';\n\nlet normalisedValue;\n$: normalisedValue = scaleValue(value, min, max, 0, 1);\n\nlet normalisedStep = undefined;\n$: if (step != null) {\n  normalisedStep = step / (max - min);\n} else {\n  normalisedStep = undefined;\n}\n\nlet width;\nlet container;\nlet oldVal;\nlet dragStartX;\nlet mousedown = false;\n\nfunction roundToStep(v, step) {\n  if (step == null) {\n    return v;\n  }\n  return Math.round(v / step) * step;\n}\n\nfunction scaleValue(v, oldMin, oldMax, newMin, newMax) {\n  if (v < oldMin) {\n    return newMin;\n  }\n  if (v > oldMax) {\n    return newMax;\n  }\n  const oldRange = oldMax - oldMin;\n  const newRange = newMax - newMin;\n  if (oldRange <= 0 || newRange <= 0) {\n    throw new Error('max should be greater than min');\n  }\n  return +(((v - oldMin) * newRange) / oldRange + newMin).toPrecision(12);\n}\n\nfunction touchStart(e) {\n  if (window.PointerEvent) {\n    return;\n  }\n  const rect = container.getBoundingClientRect();\n  const x = e.touches[0].clientX - rect.left;\n  const v = x / width;\n  if (v < 0) {\n    normalisedValue = 0;\n  } else if (v > 1) {\n    normalisedValue = 1;\n  } else {\n    normalisedValue = roundToStep(v, normalisedStep);\n  }\n  dragStartX = e.touches[0].screenX;\n  oldVal = normalisedValue;\n  value = scaleValue(normalisedValue, 0, 1, min, max);\n  mousedown = true;\n}\n\nfunction touchMove(e) {\n  if (window.PointerEvent) {\n    return;\n  }\n  if (!mousedown) {\n    return;\n  }\n  const change = e.touches[0].screenX - dragStartX;\n  const v = change / width + oldVal;\n  if (v < 0) {\n    normalisedValue = 0;\n  } else if (v > 1) {\n    normalisedValue = 1;\n  } else {\n    normalisedValue = roundToStep(v, normalisedStep);\n  }\n  value = scaleValue(normalisedValue, 0, 1, min, max);\n}\n\nfunction dragStart(e) {\n  const rect = container.getBoundingClientRect();\n  const x = e.clientX - rect.left; //x position within the element.\n  const v = x / width;\n  if (v < 0) {\n    normalisedValue = 0;\n  } else if (v > 1) {\n    normalisedValue = 1;\n  } else {\n    normalisedValue = roundToStep(v, normalisedStep);\n  }\n  dragStartX = e.screenX;\n  oldVal = normalisedValue;\n  mousedown = true;\n  value = scaleValue(normalisedValue, 0, 1, min, max);\n  document.body.addEventListener('pointermove', dragging);\n}\n\nfunction dragging(e) {\n  if (e.pressure === 0) {\n    document.body.removeEventListener('pointermove', dragging);\n    mousedown = false;\n    return;\n  }\n  if (!mousedown) {\n    return;\n  }\n  const change = e.screenX - dragStartX;\n  const v = change / width + oldVal;\n  if (v < 0) {\n    normalisedValue = 0;\n  } else if (v > 1) {\n    normalisedValue = 1;\n  } else {\n    normalisedValue = roundToStep(v, normalisedStep);\n  }\n  value = scaleValue(normalisedValue, 0, 1, min, max);\n}\n\nfunction dragEnd(e) {\n  document.body.removeEventListener('pointermove', dragging);\n  mousedown = false;\n}\n\nlet thumbSize = 0.75;\n$: thumbSize = mousedown ? 1.4 : 0.75;\n</script>\n\n<style>\n  .mdc-slider {\n    -ms-touch-action: none;\n    touch-action: none;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n\n  .mdc-slider__track-container {\n    top: 50%;\n    height: 2px;\n    overflow: hidden;\n  }\n\n  .mdc-slider__track {\n    -webkit-transform-origin: left top;\n    -ms-transform-origin: left top;\n    transform-origin: left top;\n    will-change: transform;\n  }\n\n  .mdc-slider__thumb-container {\n    position: absolute;\n    margin-top: 7px;\n    left: 0;\n    width: 21px;\n    height: 100%;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    will-change: transform;\n  }\n\n  .mdc-slider__thumb {\n    stroke-width: 3.5;\n    -webkit-transition: fill 0.1s ease-out, stroke 0.1s ease-out,\n    -webkit-transform 0.1s ease-out;\n    -o-transition: transform 0.1s ease-out, fill 0.1s ease-out,\n    stroke 0.1s ease-out;\n    transition: transform 0.1s ease-out, fill 0.1s ease-out,\n    stroke 0.1s ease-out, -webkit-transform 0.1s ease-out;\n  }\n\n  .mdc-slider__focus-ring {\n    width: 21px;\n    height: 21px;\n    border-radius: 50%;\n    -webkit-transition: opacity 0.26667s ease-out,\n    background-color 0.26667s ease-out, -webkit-transform 0.26667s ease-out;\n    -o-transition: transform 0.26667s ease-out, opacity 0.26667s ease-out,\n    background-color 0.26667s ease-out;\n    transition: transform 0.26667s ease-out, opacity 0.26667s ease-out,\n    background-color 0.26667s ease-out, -webkit-transform 0.26667s ease-out;\n  }\n</style>\n\n<div\n  class=\"relative w-full h-8 cursor-pointer block outline-none mdc-slider\"\n  tabindex=\"0\"\n  role=\"slider\"\n  bind:clientWidth={width}\n  bind:this={container}\n  on:touchstart|stopPropagation|preventDefault={touchStart}\n  on:touchmove|stopPropagation|preventDefault={touchMove}\n  on:touchend|stopPropagation|preventDefault={dragEnd}\n  on:pointerdown|stopPropagation|preventDefault={dragStart}\n  on:pointerup|stopPropagation|preventDefault={dragEnd}>\n  <div class=\"absolute w-full mdc-slider__track-container {trackEmptyColor}\">\n    <div\n      class=\"h-full w-full absolute mdc-slider__track {trackFilledColor}\"\n      style=\"transform: scaleX({normalisedValue});\"/>\n  </div>\n  <div\n    class=\"mdc-slider__thumb-container\"\n    style=\"transform: translateX({width * normalisedValue}px) translateX(-50%);\">\n    <svg\n      class=\"absolute left-0 top-0 fill-current {thumbColor} mdc-slider__thumb\"\n      style=\"transform: scale({thumbSize});\"\n      width=\"21\"\n      height=\"21\">\n      <circle cx=\"10.5\" cy=\"10.5\" r=\"7.875\"/>\n    </svg>\n    <div\n      style=\"transform: scale(1.125);\"\n      class=\"mdc-slider__focus-ring {trackFilledColor} hover:opacity-25\n      opacity-0\"/>\n  </div>\n</div>\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import Slider from \"../widgets/Slider.svelte\";\n\n  let value = 0.5;\n  let min = 0;\n  let max = 1;\n  let step = 0.02;\n  let thumbColor = \"text-red-500\";\n  let trackEmptyColor = \"bg-blue-200\";\n  let trackFilledColor = \"bg-blue-600\";\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Slider</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The value of the slider\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">undefined</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">max</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The max value of the slider\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">1</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">min</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The min value of the slider\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">0</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">step</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The size of each movement of the slider\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">undefined</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">thumbColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the slider thumb. Accepts a valid Tailwindcss text color\n      class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-blue-500\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      trackEmptyColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the empty slider track. Accepts a valid Tailwindcss\n      background color class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">bg-blue-200</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      trackFilledColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the filled slider track. Accepts a valid Tailwindcss\n      background color class.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">bg-blue-500</div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"my-2\">\n    <Slider\n      bind:value\n      {min}\n      {max}\n      {step}\n      {thumbColor}\n      {trackEmptyColor}\n      {trackFilledColor} />\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input number hideDetails outlined label=\"value\" bind:value />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input number hideDetails outlined label=\"max\" bind:value={max} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input number hideDetails outlined label=\"min\" bind:value={min} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input number hideDetails outlined label=\"step\" bind:value={step} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"thumbColor\"\n          bind:value={thumbColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"trackEmptyColor\"\n          bind:value={trackEmptyColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"trackFilledColor\"\n          bind:value={trackFilledColor} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n{`<Slider\n  bind:value\n  {min}\n  {max}\n  {step}\n  {thumbColor}\n  {trackEmptyColor}\n  {trackFilledColor} />`}\n</pre>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import Input from \"./Input.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let label = \"\";\n  export let items = [];\n  export let value = \"\";\n  export let minCharactersToSearch = 0;\n  export let noResultsText = \"No results found\";\n  export let maxLen = undefined;\n  export let clearable = false;\n  export let disabled = false;\n  export let hideDetails = false;\n\n  export let borderColor = \"border-gray-700\";\n  export let labelColor = \"text-gray-700\";\n  export let helperText = \"\";\n  export let helperTextColor = \"\";\n  export let outlined = false;\n\n  export let labelFieldName = undefined;\n  export let keywordsFieldName = labelFieldName;\n  export let caseSensitive = false;\n  export let keywordsFunction = function (item) {\n    if (item === undefined || item === null) {\n      return \"\";\n    }\n    return keywordsFieldName\n      ? item[keywordsFieldName].toString()\n      : item.toString();\n  };\n\n  let filteredListItems = [];\n  let listVisible = false;\n  let itemClicked = false;\n  let icon;\n  let highlightIndex = -1;\n  let text = \"\";\n\n  $: icon = listVisible ? \"arrow_drop_up\" : \"arrow_drop_down\";\n\n  function onInput(e) {\n    const t = e.detail;\n    if (t.length >= minCharactersToSearch) {\n      let tempFiltered;\n      if (caseSensitive) {\n        tempFiltered = items.filter((it) =>\n          keywordsFunction(it).includes(t)\n        );\n      } else{\n        tempFiltered = items.filter((it) =>\n          keywordsFunction(it).toLowerCase().includes(t.toLowerCase())\n        );\n      }\n      filteredListItems = maxLen ? tempFiltered.slice(0, maxLen) : tempFiltered;\n    }\n  }\n\n  $: if (value) {\n    if (!items.some((it) => keywordsFunction(it) === keywordsFunction(value))) {\n      value = null;\n    }\n  }\n\n  $: if (value == null) {\n    setText(\"\");\n  } else if (typeof value === \"string\") {\n    setText(value || \"\");\n  } else if (typeof value === \"number\") {\n    setText(value == null ? \"\" : value);\n  } else if (typeof value === \"boolean\") {\n    setText(value == null ? \"\" : value);\n  } else {\n    setText(value[labelFieldName] == null ? \"\" : value[labelFieldName]);\n  }\n\n  function setText(v) {\n    text = v;\n  }\n\n  function isItemSelected(item) {\n    if (value === item) return true;\n    return false;\n  }\n\n  function setVal(item) {\n    itemClicked = false;\n    listVisible = false;\n    highlightIndex = -1;\n    if (value !== item) {\n      value = item;\n      dispatch(\"change\", item);\n    } else {\n      onBlur();\n    }\n  }\n\n  function up(listSize, currentIndex) {\n    if (currentIndex === 0 || currentIndex === -1) {\n      return listSize - 1;\n    }\n    return currentIndex - 1;\n  }\n\n  function down(listSize, currentIndex) {\n    if (currentIndex === listSize - 1) {\n      return 0;\n    }\n    return currentIndex + 1;\n  }\n\n  function handleKeydown(e) {\n    listVisible = e.key !== \"Escape\";\n    if (e.key === \"ArrowDown\") {\n      highlightIndex = down(filteredListItems.length, highlightIndex);\n    } else if (e.key === \"ArrowUp\") {\n      highlightIndex = up(filteredListItems.length, highlightIndex);\n    } else if (e.key === \"Escape\") {\n      highlightIndex = -1;\n    } else if (e.key === \"Enter\") {\n      if (highlightIndex >= 0 && highlightIndex < filteredListItems.length) {\n        setVal(filteredListItems[highlightIndex]);\n      }\n    }\n  }\n\n  function onFocus(e) {\n    filteredListItems = maxLen ? items.slice(0, maxLen) : items;\n    listVisible = true;\n    if (text) {\n      e.target.selectionStart = 0;\n      e.target.selectionEnd = text.toString().length;\n    }\n  }\n\n  function onBlur() {\n    if (itemClicked) return;\n    listVisible = false;\n    if (value == null) {\n      text = \"\";\n    } else if (typeof value === \"string\") {\n      text = value || \"\";\n    } else if (typeof value === \"number\") {\n      text = value == null ? \"\" : value;\n    } else if (typeof value === \"boolean\") {\n      text = value == null ? \"\" : value;\n    } else {\n      text = value[labelFieldName] || \"\";\n    }\n    highlightIndex = -1;\n  }\n\n  function onClear() {\n    value = null;\n    text = \"\";\n    dispatch(\"change\", null);\n  }\n</script>\n\n<style>\n  .active {\n    @apply bg-gray-300 font-medium;\n  }\n</style>\n\n<div class=\"relative\">\n  <Input\n    {outlined}\n    {icon}\n    {clearable}\n    {disabled}\n    {hideDetails}\n    {label}\n    {labelColor}\n    {borderColor}\n    {helperText}\n    {helperTextColor}\n    bind:value={text}\n    on:input={onInput}\n    on:keydown={handleKeydown}\n    on:blur={onBlur}\n    on:focus={onFocus}\n    on:clear={onClear} />\n  <div\n    style=\"max-height: 320px;\"\n    on:mouseenter={() => (itemClicked = true)}\n    on:mouseleave={() => (itemClicked = false)}\n    class={`absolute bg-white rounded-sm w-full elevation-4 z-30 overflow-y-auto ${hideDetails ? 'mt-0' : '-mt-5'} ${listVisible && text.toString().length >= minCharactersToSearch ? '' : 'hidden'}`}>\n    {#if filteredListItems.length > 0}\n      <ul class=\"my-2\">\n        {#each filteredListItems as item, i}\n          <li\n            class={`p-3 cursor-pointer hover:bg-gray-200 ${highlightIndex === i ? 'bg-gray-300' : ''}`}\n            class:active={isItemSelected(item)}\n            on:click|stopPropagation|preventDefault={setVal(item)}>\n            {labelFieldName ? item[labelFieldName] : item}\n          </li>\n        {/each}\n      </ul>\n    {:else}\n      <div class=\"m-3\" on:mousedown|stopPropagation|preventDefault>\n        {noResultsText}\n      </div>\n    {/if}\n  </div>\n</div>\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import Autocomplete from \"../widgets/Autocomplete.svelte\";\n\n  let label = \"Country Name\";\n  let items = [\n    {\n      countryCode: 'MYS',\n      countryName: 'Malaysia',\n    },\n    {\n      countryCode: 'JPN',\n      countryName: 'Japan',\n    },\n    {\n      countryCode: 'KOR',\n      countryName: 'Korea',\n    },\n    {\n      countryCode: \"SGP\",\n      countryName: \"Singapore\",\n    },\n    {\n      countryCode: \"HKG\",\n      countryName: \"Hong Kong\",\n    },\n    {\n      countryCode: \"CHN\",\n      countryName: \"China\",\n    },\n  ];\n  let value = \"\";\n  let minCharactersToSearch = 0;\n  let noResultsText = \"No results found\";\n  let caseSensitive = false;\n  let maxLen = undefined;\n  let clearable = false;\n  let disabled = false;\n  let hideDetails = false;\n\n  let borderColor = \"border-gray-700\";\n  let labelColor = \"text-gray-700\";\n  let helperText = \"Select a country\";\n  let helperTextColor = \"text-red-600\";\n  let outlined = false;\n\n  let labelFieldName = \"countryName\";\n  let keywordsFieldName = \"countryCode\";\n  \n  function keywordsFunction(item) {\n    if (item === undefined || item === null) {\n      return \"\";\n    }\n    return `${item.countryCode}|${item.countryName}`;\n  }\n\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Auto Complete</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The label text of the auto complete input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">items</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The list of items to choose from. Accepts an array of strings or objects.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">array</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">[]</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The selected object/string.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      object/string\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      minCharactersToSearch\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The minimum number of characters entered to show the search result\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">0</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      noResultsText\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The text to show when no results are found\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      'No results found'\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">maxLen</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The maximum number of search results shown\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">undefined</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">clearable</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Includes a clear button when 'clearable' is true\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Disables autocomplete box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">hideDetails</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Hides helper text.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">borderColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The border color of the auto complete box. Accepts valid Tailwindcss\n      border color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      border-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">labelColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the label text. Accepts valid Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">helperText</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The helper text underneath the auto complete box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      helperTextColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the helper text underneath the auto complete box. Accepts\n      Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">outlined</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Transformed this into a outlined auto complete box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      labelFieldName\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      When an array of objects is passed to 'items', this prop specifies the\n      field to display.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">undefined</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      caseSensitive\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Whether the search will be case sensitive.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      false\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      keywordsFieldName\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The field to search when user types. When no value is specified, the field\n      specified in labelFieldName will be used.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      *labelFieldName\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      keywordsFunction\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The function to generate a keyword for each of the item in the array of\n      'items' for the purpose of searching.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">function</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      <pre>\n        {`function (item) {\n  if (item === undefined || item === null) {\n    return \"\";\n  }\n  return keywordsFieldName\n    ? item[keywordsFieldName].toString()\n    : item.toString();\n}`}\n      </pre>\n    </div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"my-2\">\n    <Autocomplete\n      {label}\n      {items}\n      {caseSensitive}\n      bind:value\n      {minCharactersToSearch}\n      {noResultsText}\n      {maxLen}\n      {borderColor}\n      {labelColor}\n      {helperText}\n      {helperTextColor}\n      {outlined}\n      {clearable}\n      {disabled}\n      {hideDetails}\n      {labelFieldName}\n      {keywordsFieldName}\n      {keywordsFunction} />\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"caseSensitive\" bind:checked={caseSensitive} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"outlined\" bind:checked={outlined} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"clearable\" bind:checked={clearable} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"hideDetails\" bind:checked={hideDetails} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"label\" bind:value={label} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          readonly\n          hideDetails\n          outlined\n          label=\"value[keywordsFieldName]\"\n          value={value[keywordsFieldName]} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          number\n          hideDetails\n          outlined\n          label=\"minCharactersToSearch\"\n          bind:value={minCharactersToSearch} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          number\n          hideDetails\n          outlined\n          label=\"maxLen\"\n          bind:value={maxLen} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"noResultsText\"\n          bind:value={noResultsText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Autocomplete\n          hideDetails\n          outlined\n          label=\"labelFieldName\"\n          items={['countryCode','countryName']}\n          bind:value={labelFieldName} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Autocomplete\n          hideDetails\n          outlined\n          label=\"keywordsFieldName\"\n          items={['countryCode','countryName']}\n          bind:value={keywordsFieldName} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"borderColor\"\n          bind:value={borderColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"labelColor\"\n          bind:value={labelColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperText\"\n          bind:value={helperText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperTextColor\"\n          bind:value={helperTextColor} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light text-sm\">\n{`\nlet items = [\n  {\n    countryCode: 'MYS',\n    countryName: 'Malaysia',\n  },\n  {\n    countryCode: 'JPN',\n    countryName: 'Japan',\n  },\n  {\n    countryCode: 'KOR',\n    countryName: 'Korea',\n  },\n  {\n    countryCode: \"SGP\",\n    countryName: \"Singapore\",\n  },\n  {\n    countryCode: \"HKG\",\n    countryName: \"Hong Kong\",\n  },\n  {\n    countryCode: \"CHN\",\n    countryName: \"China\",\n  },\n];\nfunction keywordsFunction(item) {\n  if (item === undefined || item === null) {\n    return \"\";\n  }\n  return (item.countryCode + \"|\" + item.countryName);\n}\n\n<Autocomplete\n  {label}\n  {items}\n  {caseSensitive}\n  bind:value\n  {minCharactersToSearch}\n  {noResultsText}\n  {maxLen}\n  {borderColor}\n  {labelColor}\n  {helperText}\n  {helperTextColor}\n  {outlined}\n  {clearable}\n  {disabled}\n  {hideDetails}\n  {labelFieldName}\n  {keywordsFieldName}\n  {keywordsFunction} />`}\n</pre>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import Input from \"./Input.svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let label = \"\";\n  export let items = [];\n  export let value = [];\n  export let minCharactersToSearch = 0;\n  export let noResultsText = \"No results found\";\n  export let clearable = false;\n  export let disabled = false;\n  export let hideDetails = false;\n\n  export let borderColor = \"border-gray-700\";\n  export let labelColor = \"text-gray-700\";\n  export let helperText = \"\";\n  export let helperTextColor = \"\";\n  export let outlined = false;\n\n  export let labelFieldName = undefined;\n  export let keywordsFieldName = labelFieldName;\n  export let caseSensitive = false;\n  export let keywordsFunction = function (item) {\n    if (item === undefined || item === null) {\n      return \"\";\n    }\n    return keywordsFieldName\n      ? item[keywordsFieldName].toString()\n      : item.toString();\n  };\n\n  let listVisible = false;\n  let icon;\n  let highlightIndex = -1;\n  let text = \"\";\n\n  $: icon = listVisible ? \"arrow_drop_up\" : \"arrow_drop_down\";\n\n  function onFocus(e) {\n    listVisible = true;\n    searching = false;\n    flattenList = [];\n    if (text) {\n      e.target.selectionStart = 0;\n      e.target.selectionEnd = text.toString().length;\n    }\n  }\n\n  $: if (value) {\n    setText();\n    layers = [[...items]];\n    let tempList = items;\n    for (let i = 0; i < value.length; i++) {\n      const item = tempList.find((it) => it[keywordsFieldName] === value[i]);\n      if (item && item.children && item.children.length > 0) {\n        layers = [...layers, [...item.children]];\n        tempList = item.children;\n      } else {\n        break;\n      }\n    }\n  }\n\n  function onClear() {\n    listVisible = false;\n    searching = false;\n    flattenList = [];\n    value = [];\n    layers = [[...items]];\n    text = \"\";\n  }\n\n  function setText() {\n    text = value.join(\" / \");\n  }\n\n  function itemClicked(item, i) {\n    searching = false;\n    flattenList = [];\n    value = value.slice(0, i);\n    value = [...value, item[keywordsFieldName]];\n    setText();\n    if (item.children && item.children.length > 0) {\n      layers = layers.slice(0, i + 1);\n      layers = [...layers, [...item.children]];\n    } else {\n      listVisible = false;\n    }\n  }\n\n  let layers = [[...items]];\n\n  let searching = false;\n\n  function onInput(e) {\n    searching = true;\n    const t = e.detail;\n    if (t.length >= minCharactersToSearch) {\n      const baseKeyword = caseSensitive ? t : t.toLowerCase();\n      flattenList = getListWithKeyword([], items, baseKeyword);\n    } else {\n      flattenList = [];\n    }\n  }\n\n  function getListWithKeyword(keywords, tree, t) {\n    let masterList = [];\n    for (let i = 0; i < tree.length; i++) {\n      let k = keywordsFunction(tree[i]);\n      k = caseSensitive ? k : k.toLowerCase();\n      const display = tree[i][keywordsFieldName];\n      if (k.includes(t)) {\n        const flatten = getFlatList(\n          [[...keywords, display]],\n          [...keywords, display],\n          tree[i].children\n        );\n        masterList = [...masterList, ...flatten];\n      } else if (tree[i].children && tree[i].children.length > 0) {\n        const list = getListWithKeyword(\n          [...keywords, display],\n          tree[i].children,\n          t\n        );\n        masterList = [...masterList, ...list];\n      }\n    }\n    return masterList;\n  }\n\n  function getFlatList(masterList, keywords, children) {\n    if (!children || children.length === 0) {\n      return masterList;\n    }\n    for (let i = 0; i < children.length; i++) {\n      const childKeyword = keywordsFunction(children[i]);\n      if (childKeyword) {\n        const childKeywords = [...keywords, children[i][keywordsFieldName]];\n        masterList = [...masterList, childKeywords];\n        masterList = getFlatList(\n          masterList,\n          childKeywords,\n          children[i].children\n        );\n      }\n    }\n    return masterList;\n  }\n\n  let flattenList = [];\n\n  function flattenListClicked(list) {\n    searching = false;\n    listVisible = false;\n    value = [...list];\n    setText();\n    flattenList = [];\n    layers = [[...items]];\n    let tempList = items;\n    for (let i = 0; i < list.length; i++) {\n      const item = tempList.find((it) => it[keywordsFieldName] === list[i]);\n      if (item && item.children && item.children.length > 0) {\n        layers = [...layers, [...item.children]];\n        tempList = item.children;\n      } else {\n        break;\n      }\n    }\n  }\n\n  let isItemSelected;\n  $: isItemSelected = (item, i) => {\n    if (value[i] === item[keywordsFieldName]) {\n      return true;\n    }\n    return false;\n  };\n\n  function onBlur() {\n    if (mouseover) return;\n    listVisible = false;\n    setText();\n  }\n\n  let mouseover;\n  \n  function handleKeydown(e) {\n    listVisible = e.key !== \"Escape\";\n  }\n</script>\n\n<style>\n  .active {\n    @apply bg-gray-300 font-medium;\n  }\n</style>\n\n<div class=\"relative\">\n  <div class=\"relative z-20\">\n    <Input\n      {outlined}\n      {icon}\n      {clearable}\n      {disabled}\n      {hideDetails}\n      {label}\n      {labelColor}\n      {borderColor}\n      {helperText}\n      {helperTextColor}\n      bind:value={text}\n      on:input={onInput}\n      on:keydown={handleKeydown}\n      on:blur={onBlur}\n      on:focus={onFocus}\n      on:clear={onClear} />\n  </div>\n  <div\n    tabindex=\"0\"\n    on:blur={onBlur}\n    on:mouseenter={() => (mouseover = true)}\n    on:mouseleave={() => (mouseover = false)}\n    class={`focus:outline-none absolute z-30 bg-white rounded-sm elevation-4 ${hideDetails ? 'mt-0' : '-mt-5'} ${listVisible ? '' : 'hidden'}`}>\n    {#if items.length > 0 && flattenList.length === 0 && !searching}\n      <div class=\"flex\">\n        {#each layers as items, i}\n          <ul\n            style=\"max-height: 320px;min-width:210px;\"\n            class=\"flex flex-col border-r my-2 overflow-y-auto\">\n            {#each items as item}\n              <li\n                class:active={isItemSelected(item, i)}\n                on:click={() => itemClicked(item, i)}\n                class=\"flex items-center justify-between hover:bg-gray-200 p-3\">\n                {item[labelFieldName]}\n                {#if item.children && item.children.length > 0}\n                  <span\n                    class=\"material-icons ml-3 w-3\">keyboard_arrow_right</span>\n                {/if}\n              </li>\n            {/each}\n          </ul>\n        {/each}\n      </div>\n    {:else if flattenList.length > 0}\n      <ul\n        style=\"max-height: 320px;\"\n        class=\"flex flex-col border-r my-2 overflow-y-auto\">\n        {#each flattenList as list}\n          <li\n            on:click={() => flattenListClicked(list)}\n            class=\"flex items-center justify-between hover:bg-gray-200 p-3\">\n            {list.join(' / ')}\n          </li>\n        {/each}\n      </ul>\n    {:else}\n      <div class=\"m-3\" on:mousedown|stopPropagation|preventDefault>\n        {noResultsText}\n      </div>\n    {/if}\n  </div>\n</div>\n<!--{#if listVisible}-->\n<!--  <div-->\n<!--    on:click={() => (listVisible = false)}-->\n<!--    tabindex=\"-1\"-->\n<!--    class=\"bg-red-400 opacity-75 z-10 fixed focus:outline-none inset-0 h-full w-full cursor-default\"></div>-->\n<!--{/if}-->\n","<script>\n  import Button from \"../widgets/Button.svelte\";\n  import Checkbox from \"../widgets/Checkbox.svelte\";\n  import Input from \"../widgets/Input.svelte\";\n  import Autocomplete from \"../widgets/Autocomplete.svelte\";\n  import Cascader from \"../widgets/Cascader.svelte\";\n\n  let label = \"City\";\n  let items = [\n    {\n      name: \"Malaysia\",\n      children: [\n        { name: \"Kuala Lumpur\" },\n        { name: \"Johor\" },\n        { name: \"Selangor\" },\n        { name: \"Negeri Sembilan\" },\n        { name: \"Melaka\" },\n      ],\n    },\n    {\n      name: \"Japan\",\n      children: [\n        { name: \"Chiba\" },\n        { name: \"Fukuoka\" },\n        { name: \"Hamamatsu\" },\n        { name: \"Hiroshima\" },\n        { name: \"Kawasaki\" },\n      ],\n    },\n    {\n      name: \"Korea\",\n      children: [\n        { name: \"Damyang\" },\n        { name: \"Deokjeokdo\" },\n        { name: \"Busan\" },\n        { name: \"Jinhae\" },\n        { name: \"Seoul\" },\n      ],\n    },\n    {\n      name: \"Singapore\",\n    },\n    {\n      name: \"Hong Kong\",\n    },\n    {\n      name: \"China\",\n      children: [\n        {\n          name: \"Beijing\",\n          children: [\n            { name: \"Dongcheng\" },\n            { name: \"Xicheng\" },\n            { name: \"Chaoyang\" },\n            { name: \"Fengtai\" },\n            { name: \"Shijingshan\" },\n          ],\n        },\n        {\n          name: \"Shanghai\",\n          children: [\n            { name: \"Huapu\" },\n            { name: \"Xuhui\" },\n            { name: \"Changning\" },\n            { name: \"Jing'an\" },\n            { name: \"Putuo\" },\n          ],\n        },\n        { name: \"Guangzhou\" },\n        { name: \"Suzhou\" },\n        { name: \"Chengdu\" },\n      ],\n    },\n  ];\n  let value = [];\n  let minCharactersToSearch = 0;\n  let noResultsText = \"No results found\";\n  let clearable = false;\n  let disabled = false;\n  let hideDetails = false;\n\n  let borderColor = \"border-gray-700\";\n  let labelColor = \"text-gray-700\";\n  let helperText = \"search by typing\";\n  let helperTextColor = \"text-blue-700\";\n  let outlined = false;\n\n  let labelFieldName = \"name\";\n  let keywordsFieldName = labelFieldName;\n  let caseSensitive = false;\n  let keywordsFunction = function (item) {\n    if (item === undefined || item === null) {\n      return \"\";\n    }\n    return keywordsFieldName\n      ? item[keywordsFieldName].toString()\n      : item.toString();\n  };\n  let showCode = false;\n</script>\n\n<h2 class=\"text-xl ml-4 font-semibold my-6\">Cascader</h2>\n\n<div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n  <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n  <div class=\"table-row font-bold\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The label text of the cascader input box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">items</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The list of items to choose from. Each item can contain a 'children'\n      property. The 'children' property is an array of items. An item which does\n      not contain the 'children' property is a leaf node.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">array</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">[]</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      An array of the selected values for each layer of the tree.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      array of strings\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      minCharactersToSearch\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The minimum number of characters entered to show the search result\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">number</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">0</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      noResultsText\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The text to show when no results are found\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      'No results found'\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">clearable</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Includes a clear button when 'clearable' is true\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Disables cascader.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">hideDetails</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Hides helper text.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">borderColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The border color of the cascader box. Accepts valid Tailwindcss border\n      color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      border-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">labelColor</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the label text. Accepts valid Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      text-gray-700\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">helperText</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The helper text underneath the cascader box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      helperTextColor\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The color of the helper text underneath the cascader box. Accepts\n      Tailwindcss text color class\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">outlined</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Transformed this into a outlined cascader box.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      labelFieldName\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Specifies the field to display.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">undefined</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      caseSensitive\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      Whether the search will be case sensitive.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      keywordsFieldName\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The field to search when user types. When no value is specified, the field\n      specified in labelFieldName will be used.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      *labelFieldName\n    </div>\n  </div>\n  <div class=\"table-row\">\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      keywordsFunction\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      The function to generate a keyword for each of the item in the array of\n      'items' for the purpose of searching.\n    </div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">function</div>\n    <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n      <pre>\n        {`function (item) {\n  if (item === undefined || item === null) {\n    return \"\";\n  }\n  return keywordsFieldName\n    ? item[keywordsFieldName].toString()\n    : item.toString();\n}`}\n      </pre>\n    </div>\n  </div>\n</div>\n\n<div class=\"bg-gray-200 rounded p-4 w-full\">\n  <h3 class=\"mx-2 mb-2 flex justify-between\">\n    <div class=\"text-lg font-bold\">Demo</div>\n    <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n  </h3>\n  <div class=\"my-2\">\n    <Cascader\n      {label}\n      {items}\n      bind:value\n      {minCharactersToSearch}\n      {caseSensitive}\n      {noResultsText}\n      {borderColor}\n      {labelColor}\n      {helperText}\n      {helperTextColor}\n      {outlined}\n      {clearable}\n      {disabled}\n      {hideDetails}\n      {labelFieldName}\n      {keywordsFieldName}\n      {keywordsFunction} />\n  </div>\n  <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4\">\n        <Checkbox label=\"caseSensitive\" bind:checked={caseSensitive} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"outlined\" bind:checked={outlined} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"clearable\" bind:checked={clearable} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"disabled\" bind:checked={disabled} />\n      </div>\n      <div class=\"px-4\">\n        <Checkbox label=\"hideDetails\" bind:checked={hideDetails} />\n      </div>\n    </div>\n    <div class=\"w-full flex flex-row flex-wrap\">\n      <div class=\"px-4 pb-2\">\n        <Input hideDetails outlined label=\"label\" bind:value={label} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          readonly\n          hideDetails\n          outlined\n          label=\"value\"\n          value={JSON.stringify(value)} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          number\n          hideDetails\n          outlined\n          label=\"minCharactersToSearch\"\n          bind:value={minCharactersToSearch} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"noResultsText\"\n          bind:value={noResultsText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Autocomplete\n          hideDetails\n          outlined\n          label=\"labelFieldName\"\n          items={['name']}\n          bind:value={labelFieldName} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Autocomplete\n          hideDetails\n          outlined\n          label=\"keywordsFieldName\"\n          items={['name']}\n          bind:value={keywordsFieldName} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"borderColor\"\n          bind:value={borderColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"labelColor\"\n          bind:value={labelColor} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperText\"\n          bind:value={helperText} />\n      </div>\n      <div class=\"px-4 pb-2\">\n        <Input\n          hideDetails\n          outlined\n          label=\"helperTextColor\"\n          bind:value={helperTextColor} />\n      </div>\n    </div>\n  </div>\n</div>\n\n<pre\n  class:hidden={!showCode}\n  class=\"my-2 bg-gray-200 rounded p-5 font-light text-sm\">\n{`\nlet items = [\n    {\n        name: \"Malaysia\",\n        children: [\n        { name: \"Kuala Lumpur\" },\n        { name: \"Johor\" },\n        { name: \"Selangor\" },\n        { name: \"Negeri Sembilan\" },\n        { name: \"Melaka\" },\n        ],\n    },\n    {\n        name: \"Japan\",\n        children: [\n        { name: \"Chiba\" },\n        { name: \"Fukuoka\" },\n        { name: \"Hamamatsu\" },\n        { name: \"Hiroshima\" },\n        { name: \"Kawasaki\" },\n        ],\n    },\n    {\n        name: \"Korea\",\n        children: [\n        { name: \"Damyang\" },\n        { name: \"Deokjeokdo\" },\n        { name: \"Busan\" },\n        { name: \"Jinhae\" },\n        { name: \"Seoul\" },\n        ],\n    },\n    {\n        name: \"Singapore\",\n    },\n    {\n        name: \"Hong Kong\",\n    },\n    {\n        name: \"China\",\n        children: [\n        {\n            name: \"Beijing\",\n            children: [\n            { name: \"Dongcheng\" },\n            { name: \"Xicheng\" },\n            { name: \"Chaoyang\" },\n            { name: \"Fengtai\" },\n            { name: \"Shijingshan\" },\n            ],\n        },\n        {\n            name: \"Shanghai\",\n            children: [\n            { name: \"Huapu\" },\n            { name: \"Xuhui\" },\n            { name: \"Changning\" },\n            { name: \"Jing'an\" },\n            { name: \"Putuo\" },\n            ],\n        },\n        { name: \"Guangzhou\" },\n        { name: \"Suzhou\" },\n        { name: \"Chengdu\" },\n        ],\n    },\n];\nlet keywordsFunction = function (item) {\n    if (item === undefined || item === null) {\n        return \"\";\n    }\n    return keywordsFieldName\n        ? item[keywordsFieldName].toString()\n        : item.toString();\n};\n\n<Cascader\n    {label}\n    {items}\n    bind:value\n    {minCharactersToSearch}\n    {caseSensitive}\n    {noResultsText}\n    {borderColor}\n    {labelColor}\n    {helperText}\n    {helperTextColor}\n    {outlined}\n    {clearable}\n    {disabled}\n    {hideDetails}\n    {labelFieldName}\n    {keywordsFieldName}\n    {keywordsFunction} />`}\n</pre>\n","<script>\n    import { createEventDispatcher } from 'svelte';\n    \n    const dispatch = createEventDispatcher();\n    \n    export let label = '';\n    export let value = false;\n    export let textColor = 'text-black';\n    export let trueColor = 'bg-black';\n    export let falseColor = 'bg-white';\n\n    export let disabled = false;\n    \n    function handleChange(e) {\n      indeterminate = false;\n      dispatch('change', e.target.checked);\n    }\n    \n    function handleInput(e) {\n      indeterminate = false;\n      dispatch('input', e.target.checked);\n    }\n    \n    </script>\n\n<style>\n.toggle__dot {\n  top: -.25rem;\n  left: -.25rem;\n  transition: all 0.3s ease-in-out;\n}\n\ninput:checked ~ .toggle__dot {\n  transform: translateX(100%);\n}\n</style>\n\n<label class=\"flex items-center {disabled?'cursor-not-allowed':'cursor-pointer'}\" {disabled}>\n  <div class=\"relative\">\n    <input type=\"checkbox\" class=\"hidden\" disabled={disabled} bind:checked={value}/>\n    <div class=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"></div>\n    <div class=\"toggle__dot absolute w-6 h-6 {value?trueColor:falseColor} rounded-full shadow inset-y-0 left-0\"></div>\n  </div>\n    <!-- label -->\n  <div class=\"ml-3\">\n    {#if label}\n      <span class={textColor}>{label}</span>\n    {:else}\n      <slot></slot>\n    {/if}\n  </div>\n</label>\n","<script>\n    import Button from \"../widgets/Button.svelte\";\n    import Checkbox from \"../widgets/Checkbox.svelte\";\n    import Toggle from \"../widgets/Toggle.svelte\";\n    import Input from \"../widgets/Input.svelte\";\n  \n    let label = \"Toggle with label\";\n    let value = false;\n    \n    let textColor = \"text-green-500\";\n    let trueColor = \"bg-red-600\";\n    let falseColor = \"bg-blue-600\";\n\n    let disabled = false;\n  \n    let showCode = false;\n  </script>\n  \n  <h2 class=\"text-xl ml-4 font-semibold my-6\">Toggle</h2>\n  \n  <div class=\"bg-gray-200 rounded my-4 px-4 table w-full\">\n    <h3 class=\"text-lg font-bold ml-3 mt-5 mb-3\">Properties</h3>\n    <div class=\"table-row font-bold\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Prop</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Description</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Type</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">Default</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">label</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n        The label text of the toggle.\n      </div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">''</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">value</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n        The value of the checkbox.\n      </div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n    </div>\n\n    <div class=\"table-row\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">textColor</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n        The color of the label. Accepts Tailwindcss text color\n      </div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">text-black</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">trueColor</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n        The color of the toggle when value is true. Accepts Tailwindcss background color\n      </div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">bg-red-600</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">falseColor</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n        The color of the toggle when value is false. Accepts Tailwindcss background color\n      </div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">string</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">bg-red-100</div>\n    </div>\n    <div class=\"table-row\">\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">disabled</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">\n        Whether the checkbox is disabled.\n      </div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">boolean</div>\n      <div class=\"table-cell py-3 px-3 border-b border-gray-400\">false</div>\n    </div>\n  </div>\n  \n  <div class=\"bg-gray-200 rounded p-4 w-full\">\n    <h3 class=\"mx-2 mb-2 flex justify-between\">\n      <div class=\"text-lg font-bold\">Demo</div>\n      <Checkbox bind:checked={showCode}>Show Code</Checkbox>\n    </h3>\n    <div class=\"mt-2 mb-1\">\n      <Toggle\n        label={label}\n        bind:value\n        textColor={textColor}\n        trueColor={trueColor}\n        falseColor={falseColor}\n        disabled={disabled} />\n    </div>\n    <div class=\"border border-gray-500 rounded px-3 py-4 w-full\">\n      <div class=\"w-full flex flex-row flex-wrap\">\n        <div class=\"px-4\">\n          <Checkbox label=\"value\" bind:checked={value} />\n        </div>\n        <div class=\"px-4\">\n          <Checkbox label=\"disabled\" bind:checked={disabled} />\n        </div>\n      </div>\n      <div class=\"w-full flex flex-row flex-wrap\">\n        <div class=\"px-4 pb-2\">\n          <Input hideDetails outlined label=\"label\" bind:value={label} />\n        </div>\n        <div class=\"px-4 pb-2\">\n          <Input hideDetails outlined label=\"textColor\" bind:value={textColor} />\n        </div>\n        <div class=\"px-4 pb-2\">\n          <Input hideDetails outlined label=\"trueColor\" bind:value={trueColor} />\n        </div>\n        <div class=\"px-4 pb-2\">\n          <Input hideDetails outlined label=\"falseColor\" bind:value={falseColor} />\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <pre\n    class:hidden={!showCode}\n    class=\"my-2 bg-gray-200 rounded p-5 font-light\">\n  {``}\n  </pre>\n  ","<script>\n  import Tailwindcss from \"./Tailwindcss.svelte\";\n  import NavigationDrawer from \"./widgets/NavigationDrawer.svelte\";\n  import Github from \"./svg/Github.svelte\";\n  import Installation from \"./components/Installation.svelte\";\n  import ButtonGuide from \"./components/ButtonGuide.svelte\";\n  import DialogGuide from \"./components/DialogGuide.svelte\";\n  import NavigationDrawerGuide from \"./components/NavigationDrawerGuide.svelte\";\n  import ProgressGuide from \"./components/ProgressGuide.svelte\";\n  import SpinnerGuide from \"./components/SpinnerGuide.svelte\";\n  import InputGuide from \"./components/InputGuide.svelte\";\n  import CheckboxGuide from \"./components/CheckboxGuide.svelte\";\n  import FileInputGuide from \"./components/FileInputGuide.svelte\";\n  import TextAreaGuide from \"./components/TextAreaGuide.svelte\";\n  import SliderGuide from \"./components/SliderGuide.svelte\";\n  import AutocompleteGuide from \"./components/AutocompleteGuide.svelte\";\n  import CascaderGuide from \"./components/CascaderGuide.svelte\";\n  import ToggleGuide from \"./components/ToggleGuide.svelte\";\n\n  const items = [\n    { text: \"Installation\", component: Installation },\n    { text: \"Button\", component: ButtonGuide },\n    { text: \"Dialog\", component: DialogGuide },\n    { text: \"Navigation Drawer\", component: NavigationDrawerGuide },\n    { text: \"Progress\", component: ProgressGuide },\n    { text: \"Spinner\", component: SpinnerGuide },\n    { text: \"Input\", component: InputGuide },\n    { text: \"Text Area\", component: TextAreaGuide },\n    { text: \"File Input\", component: FileInputGuide },\n    { text: \"Checkbox\", component: CheckboxGuide },\n    { text: \"Toggle\", component: ToggleGuide },\n    { text: \"Slider\", component: SliderGuide },\n    { text: \"Auto Complete\", component: AutocompleteGuide },\n    { text: \"Cascader\", component: CascaderGuide },\n  ];\n  let selectedComponent = { text: \"Installation\", component: Installation };\n</script>\n\n<style>\n</style>\n\n<Tailwindcss />\n<div class=\"h-full flex flex-col\">\n  <div\n    class=\"bg-teal-100 flex-shrink-0 h-16 mt-0 z-40 flex items-center\n      justify-between elevation-4 static\">\n    <div class=\"flex items-center\">\n      <span class=\"ml-6 text-xl font-semibold text-blue-900\">SVETAMAT</span>\n    </div>\n    <a\n      class=\"flex items-center mr-6\"\n      href=\"https://github.com/tianhai82/svetamat\">\n      <Github />\n    </a>\n  </div>\n  <div class=\"flex-grow flex flex-row h-0\">\n    <div\n      class=\"h-full w-56 bg-gray-700 text-gray-100 overflow-y-auto flex-shrink-0\">\n      <ul class=\"mx-3 py-3\">\n        {#each items as item}\n          <li\n            on:click={() => (selectedComponent = item)}\n            class={`px-4 py-3 my-1 ${selectedComponent.text === item.text ? 'rounded bg-gray-600 text-white font-medium tracking-wide' : 'cursor-pointer'}`}>\n            {item.text}\n          </li>\n        {/each}\n      </ul>\n    </div>\n\n    <div class=\"h-full flex-grow px-4 pt-2 overflow-y-auto\">\n      <svelte:component this={selectedComponent.component} />\n    </div>\n  </div>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","stop_propagation","stopPropagation","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","crossorigin","add_resize_listener","computed_style","getComputedStyle","z_index","parseInt","zIndex","position","iframe","tabIndex","parent","error","is_crossorigin","onload","contentWindow","source","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","then","bind","index","props","bound","create_component","mount_component","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","splice","cubicOut","fade","linear","opacity","fly","y","target_opacity","transform","od","u","scale","sd","_t","modal","visible","marginTop","disabledCls","fab","outlined","rounded","tile","xs","sm","lg","xl","disabled","textColor","outlineColor","bgColor","cls","tempCls","trim","hover","label","checked","indeterminate","color","subscriber_queue","is_date","obj","prototype","toString","get_interpolator","isArray","arr","bi","getTime","delta","keys","interpolators","result","tweened","defaults","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","writable","target_value","opts","previous_task","started","interpolate","abort","elapsed","boxWidth","number","borderColor","labelColor","helperText","helperTextColor","icon","clearable","hideDetails","readonly","password","hasFocus","iconCls","labelCls","inputPadBottom","setLabelColor","prefix","valueEmpty","labelTopPadding","$y","helperTextCls","labelWidth","fieldsetCls","legendStyle","setFocusState","setFieldsetCls","setLabelCls","setLegendStyle","labelTranslateStyle","showCode","alert","permanent","trackColor","fillColor","height","width","label1","checked1","indeterminate1","color1","disabled1","checked2","indeterminate2","color2","disabled2","fileInput","accept","multiple","click","files","texts","roundToStep","v","round","scaleValue","oldMin","oldMax","newMin","newMax","oldRange","newRange","toPrecision","normalisedValue","container","oldVal","dragStartX","min","thumbColor","trackEmptyColor","trackFilledColor","normalisedStep","mousedown","dragging","pressure","body","screenX","thumbSize","PointerEvent","rect","getBoundingClientRect","touches","clientX","left","items","minCharactersToSearch","noResultsText","maxLen","labelFieldName","keywordsFieldName","caseSensitive","keywordsFunction","item","filteredListItems","listVisible","itemClicked","highlightIndex","setText","setVal","onBlur","some","it","tempFiltered","includes","toLowerCase","listSize","currentIndex","up","selectionStart","selectionEnd","countryCode","countryName","searching","flattenList","layers","getListWithKeyword","keywords","tree","masterList","display","flatten","getFlatList","list","childKeywords","isItemSelected","mouseover","flattenListClicked","tempList","find","baseKeyword","JSON","stringify","trueColor","falseColor","selectedComponent","Installation","ButtonGuide","DialogGuide","NavigationDrawerGuide","ProgressGuide","SpinnerGuide","InputGuide","TextAreaGuide","FileInputGuide","CheckboxGuide","ToggleGuide","SliderGuide","AutocompleteGuide","CascaderGuide"],"mappings":"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"}